バイナリーファイル openwrt-base/.git/index とopenwrt-base-b/.git/index は異なります
diff -urN openwrt-base/scripts/download.pl openwrt-base-b/scripts/download.pl
--- openwrt-base/scripts/download.pl	2022-05-04 22:24:13.947397356 +0900
+++ openwrt-base-b/scripts/download.pl	2022-05-04 23:25:08.167804412 +0900
@@ -63,14 +63,27 @@
 	my $len = length($file_hash);
 	my $cmd;
 
-	$len == 64 and return "$ENV{'MKHASH'} sha256";
-	$len == 32 and return "$ENV{'MKHASH'} md5";
+	$len == 64 and return "mkhash sha256";
+	$len == 32 and return "mkhash md5";
 	return undef;
 }
 
-sub download_cmd($) {
+sub download_cmd {
 	my $url = shift;
+	my $have_aria2 = 0;
 	my $have_curl = 0;
+	my $fn = shift;
+	my @mrs = @_;
+	my $murl = "'$url'";
+
+	my @chArray = ('a'..'z', 'A'..'Z', 0..9);
+	my $rfn = join '', map{ $chArray[int rand @chArray] } 0..9;
+	if (open ARIA2, '-|', 'aria2c', '--version') {
+		if (defined(my $line = readline ARIA2)) {
+			$have_aria2 = 1 if $line =~ /^aria2 /;
+		}
+		close ARIA2;
+	}
 
 	if (open CURL, '-|', 'curl', '--version') {
 		if (defined(my $line = readline CURL)) {
@@ -79,10 +92,17 @@
 		close CURL;
 	}
 
-	return $have_curl
-		? (qw(curl -f --connect-timeout 20 --retry 5 --location --insecure), shellwords($ENV{CURL_OPTIONS} || ''), $url)
-		: (qw(wget --tries=5 --timeout=20 --no-check-certificate --output-document=-), shellwords($ENV{WGET_OPTIONS} || ''), $url)
-	;
+	for my $el (@mrs) {
+		$murl = $murl." '$el/$fn'";
+	}
+
+	if ($have_aria2) {
+		return ("aria2c --stderr $murl -c -x2 -s10 -j10 -k1M --server-stat-of=/dev/shm/spp --server-stat-if=/dev/shm/spp -d /dev/shm -o $rfn; cat /dev/shm/$rfn; rm /dev/shm/$rfn");
+	} elsif ($have_curl) {
+		return (qw(curl -f --connect-timeout 20 --retry 5 --location --insecure), shellwords($ENV{CURL_OPTIONS} || ''), $url);
+	} else {
+		return (qw(wget --tries=5 --timeout=20 --no-check-certificate --output-document=-), shellwords($ENV{WGET_OPTIONS} || ''), $url);
+	}
 }
 
 my $hash_cmd = hash_cmd();
@@ -92,6 +112,7 @@
 {
 	my $mirror = shift;
 	my $download_filename = shift;
+	my @mrs = @_;
 
 	$mirror =~ s!/$!!;
 
@@ -138,9 +159,9 @@
 			}
 		};
 	} else {
-		my @cmd = download_cmd("$mirror/$download_filename");
+		my @cmd = download_cmd("$mirror/$download_filename", $download_filename, @mrs);
 		print STDERR "+ ".join(" ",@cmd)."\n";
-		open(FETCH_FD, '-|', @cmd) or die "Cannot launch curl or wget.\n";
+		open(FETCH_FD, '-|', @cmd) or die "Cannot launch aria2, curl or wget.\n";
 		$hash_cmd and do {
 			open MD5SUM, "| $hash_cmd > '$target/$filename.hash'" or die "Cannot launch $hash_cmd.\n";
 		};
@@ -209,9 +230,13 @@
 		push @mirrors, "ftp://apache.cs.utah.edu/apache.org/$1";
 		push @mirrors, "ftp://apache.mirrors.ovh.net/ftp.apache.org/dist/$1";
 	} elsif ($mirror =~ /^\@GITHUB\/(.+)$/) {
+		my $dir = $1;
+		# my $i = 0;
+		# replace the 2nd '/' with '@' for jsDelivr mirror
+		# push @mirrors, "https://cdn.jsdelivr.net/gh/". $dir =~ s{\/}{++$i == 2 ? '@' : $&}ger;
 		# give github a few more tries (different mirrors)
 		for (1 .. 5) {
-			push @mirrors, "https://raw.githubusercontent.com/$1";
+			push @mirrors, "https://raw.githubusercontent.com/$dir";
 		}
 	} elsif ($mirror =~ /^\@GNU\/(.+)$/) {
 		push @mirrors, "https://mirror.csclub.uwaterloo.ca/gnu/$1";
@@ -221,8 +246,7 @@
 		push @mirrors, "http://mirror.internode.on.net/pub/gnu/$1";
 		push @mirrors, "http://mirror.navercorp.com/gnu/$1";
 		push @mirrors, "ftp://mirrors.rit.edu/gnu/$1";
-		push @mirrors, "ftp://download.xs4all.nl/pub/gnu/$1";
-		push @mirrors, "https://ftp.gnu.org/gnu/$1";
+		push @mirrors, "ftp://download.xs4all.nl/pub/gnu/";
 	} elsif ($mirror =~ /^\@SAVANNAH\/(.+)$/) {
 		push @mirrors, "https://mirror.netcologne.de/savannah/$1";
 		push @mirrors, "https://mirror.csclub.uwaterloo.ca/nongnu/$1";
@@ -288,10 +312,11 @@
 	my $mirror = shift @mirrors;
 	$mirror or die "No more mirrors to try - giving up.\n";
 
-	download($mirror, $url_filename);
+	download($mirror, $url_filename, @mirrors);
 	if (!-f "$target/$filename" && $url_filename ne $filename) {
-		download($mirror, $filename);
+		download($mirror, $filename, @mirrors);
 	}
+	@mirrors=();
 }
 
 $SIG{INT} = \&cleanup;
